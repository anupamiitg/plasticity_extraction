# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
mdb.Model(name='3000_ID26175_Y300_K300_n0-5')
mdb.models['3000_ID26175_Y300_K300_n0-5'].ConstrainedSketch(name='__profile__', 
    sheetSize=200.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].sketchOptions.setValues(
    viewStyle=AXISYM)
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].ConstructionLine(
    point1=(0.0, -100.0), point2=(0.0, 100.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].FixedConstraint(
    entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[2])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].rectangle(
    point1=(0.0, 0.0), point2=(10.0, -10.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].Part(dimensionality=AXISYMMETRIC, 
    name='Specimen', type=DEFORMABLE_BODY)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].BaseShell(sketch=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'])
del mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__']
mdb.models['3000_ID26175_Y300_K300_n0-5'].ConstrainedSketch(gridSpacing=0.7, 
    name='__profile__', sheetSize=28.28, transform=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].MakeSketchTransform(
    sketchPlane=mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].faces[0], 
    sketchPlaneSide=SIDE1, sketchOrientation=RIGHT, origin=(5.0, -5.0, 0.0)))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].rectangle(
    point1=(-5.0, 5.0), point2=(-4.0, 4.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].dragEntity(
    entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].vertices[5]
    , points=((-4.0, 4.0), (-4.025, 4.025), (-3.85, 3.85), (-3.85, 3.85), (
    -3.85, 3.675), (-3.675, 3.675), (-3.58704471588135, 3.58860778808594), (
    -3.5, 3.5), (-3.5, 3.5), (-3.5, 3.325), (-3.5, 3.15), (-3.5, 3.15), (
    -3.325, 2.975), (-3.325, 2.975), (-3.15, 2.975), (-2.975, 2.975), (-2.975, 
    2.975)))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].PartitionFaceBySketch(
    faces=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), sketch=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'])
del mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__']
mdb.models['3000_ID26175_Y300_K300_n0-5'].ConstrainedSketch(name='__profile__', 
    sheetSize=200.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].sketchOptions.setValues(
    viewStyle=AXISYM)
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].ConstructionLine(
    point1=(0.0, -100.0), point2=(0.0, 100.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].FixedConstraint(
    entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[2])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].ArcByCenterEnds(
    center=(0.0, 1.0), direction=COUNTERCLOCKWISE, point1=(0.0, 0.0), point2=(
    0.0, 2.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].Line(point1=(
    0.0, 2.0), point2=(0.0, 0.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[4])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[3]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[4])
mdb.models['3000_ID26175_Y300_K300_n0-5'].Part(dimensionality=AXISYMMETRIC, 
    name='Elastic Indenter', type=DEFORMABLE_BODY)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].BaseShell(
    sketch=mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'])
del mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__']
mdb.models['3000_ID26175_Y300_K300_n0-5'].ConstrainedSketch(gridSpacing=0.11, 
    name='__profile__', sheetSize=4.46, transform=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].MakeSketchTransform(
    sketchPlane=mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].faces[0], 
    sketchPlaneSide=SIDE1, sketchOrientation=RIGHT, origin=(0.424413, 1.0, 
    0.0)))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].Line(point1=(
    -0.424413, 0.499746680259705), point2=(0.441758608678356, 
    0.499746680259705))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[5])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[2]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[5])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].vertices[3]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[2])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].vertices[4]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[3])
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].PartitionFaceBySketch(
    faces=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), sketch=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'])
del mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__']
mdb.models['3000_ID26175_Y300_K300_n0-5'].ConstrainedSketch(gridSpacing=0.11, 
    name='__profile__', sheetSize=4.47, transform=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].MakeSketchTransform(
    sketchPlane=mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].faces[0], 
    sketchPlaneSide=SIDE1, sketchOrientation=RIGHT, origin=(0.445122, 0.828557, 
    0.0)))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].projectReferencesOntoSketch(
    filter=COPLANAR_EDGES, sketch=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].Line(point1=(
    -0.445122, -0.333830401737213), point2=(0.417837320826948, 
    -0.333830401737213))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[9])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[3]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[9])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].vertices[5]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[3])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].vertices[6]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[4])
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].PartitionFaceBySketch(
    faces=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), sketch=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'])
del mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__']
mdb.models['3000_ID26175_Y300_K300_n0-5'].ConstrainedSketch(name='__profile__', 
    sheetSize=200.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].sketchOptions.setValues(
    viewStyle=AXISYM)
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].ConstructionLine(
    point1=(0.0, -100.0), point2=(0.0, 100.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].FixedConstraint(
    entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[2])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].ArcByCenterEnds(
    center=(0.0, 0.0), direction=CLOCKWISE, point1=(0.0, 1.0), point2=(1.0, 
    0.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].vertices[2]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[2])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].Line(point1=(
    0.0, 1.0), point2=(0.0, 10.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[4])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[3]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[4])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].Line(point1=(
    0.0, 10.0), point2=(10.0, 10.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[5])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[4]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[5])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].Line(point1=(
    10.0, 10.0), point2=(10.0, 0.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[6])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[5]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[6])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].Line(point1=(
    10.0, 0.0), point2=(1.0, 0.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[7])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[6]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[7])
mdb.models['3000_ID26175_Y300_K300_n0-5'].Part(dimensionality=AXISYMMETRIC, 
    name='Steel', type=DEFORMABLE_BODY)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].BaseShell(sketch=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'])
del mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__']
mdb.models['3000_ID26175_Y300_K300_n0-5'].ConstrainedSketch(name='__profile__', 
    sheetSize=200.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].sketchOptions.setValues(
    viewStyle=AXISYM)
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].ConstructionLine(
    point1=(0.0, -100.0), point2=(0.0, 100.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].FixedConstraint(
    entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[2])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].Line(point1=(
    0.0, 10.0), point2=(15.0, 10.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].HorizontalConstraint(
    addUndoState=False, entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[3])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].Line(point1=(
    15.0, 10.0), point2=(15.0, 15.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].VerticalConstraint(
    addUndoState=False, entity=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[4])
mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[3]
    , entity2=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'].geometry[4])
mdb.models['3000_ID26175_Y300_K300_n0-5'].Part(dimensionality=AXISYMMETRIC, 
    name='Load Application Part', type=ANALYTIC_RIGID_SURFACE)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Load Application Part'].AnalyticRigidSurf2DPlanar(
    sketch=mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__'])
del mdb.models['3000_ID26175_Y300_K300_n0-5'].sketches['__profile__']
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Load Application Part'].ReferencePoint(
    point=(0.0, 15.0, 0.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].Material(name='Specimen')
mdb.models['3000_ID26175_Y300_K300_n0-5'].materials['Specimen'].Elastic(table=(
    (117000.0, 0.33), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].materials['Specimen'].Plastic(table=
    array([[300.0, 0.0], [318.992668134988, 0.00400801603206413], 
    [326.859688862151, 0.00801603206412826], [332.896266181093, 
    0.0120240480961924], [337.985336269975, 0.0160320641282565], 
    [342.468897023926, 0.0200400801603206], [346.522345784737, 
    0.0240480961923848], [350.249876618758, 0.0280561122244489], 
    [353.719377724301, 0.032064128256513], [356.978004404963, 
    0.0360721442885771], [360.060090150263, 0.0400801603206413], 
    [362.991553971493, 0.0440881763527054], [365.792532362186, 
    0.0480961923847695], [368.479038818569, 0.0521042084168337], 
    [371.064057021822, 0.0561122244488978], [373.558287386851, 
    0.0601202404809619], [375.97067253995, 0.064128256513026], 
    [378.308776832856, 0.0681362725450902], [380.579066586452, 
    0.0721442885771543], [382.787121068616, 0.0761523046092184], 
    [384.937794047853, 0.0801603206412826], [387.035339377756, 
    0.0841683366733467], [389.083509941442, 0.0881763527054108], 
    [391.08563655359, 0.0921843687374749], [393.044691569474, 
    0.0961923847695391], [394.963340674938, 0.100200400801603], 
    [396.843985435493, 0.104208416833667], [398.688798543279, 
    0.108216432865731], [400.499753237516, 0.112224448897796], 
    [402.27864803412, 0.11623246492986], [404.027127647423, 0.120240480961924], 
    [405.746700797041, 0.124248496993988], [407.438755448603, 
    0.128256513026052], [409.104571926343, 0.132264529058116], 
    [410.745334249874, 0.13627254509018], [412.36213998052, 0.140280561122244], 
    [413.956008809925, 0.144288577154309], [415.527890081891, 
    0.148296593186373], [417.07866940506, 0.152304609218437], 
    [418.609174487242, 0.156312625250501], [420.120180300526, 
    0.160320641282565], [421.612413668657, 0.164328657314629], 
    [423.086557353768, 0.168336673346693], [424.54325370765, 
    0.172344689378757], [425.983107942986, 0.176352705410822], 
    [427.406691071779, 0.180360721442886], [428.814542551474, 
    0.18436873747495], [430.207172673518, 0.188376753507014], 
    [431.585064724371, 0.192384769539078], [432.948676944913, 
    0.196392785571142], [434.298444310754, 0.200400801603206], 
    [435.63478015308, 0.204408817635271], [436.958077637137, 
    0.208416833667335], [438.268711113346, 0.212424849699399], 
    [439.567037354211, 0.216432865731463], [440.853396688605, 
    0.220440881763527], [442.128114043644, 0.224448897795591], 
    [443.391499903199, 0.228456913827655], [444.643851191037, 
    0.232464929859719], [445.885452085739, 0.236472945891784], 
    [447.116574773702, 0.240480961923848], [448.337480145889, 
    0.244488977955912], [449.548418443385, 0.248496993987976], 
    [450.749629856274, 0.25250501002004], [451.9413450799, 0.256513026052104], 
    [453.123785832166, 0.260521042084168], [454.297165335145, 
    0.264529058116232], [455.461688763974, 0.268537074148297], 
    [456.617553665713, 0.272545090180361], [457.764950350571, 
    0.276553106212425], [458.904062257716, 0.280561122244489], 
    [460.035066297639, 0.284569138276553], [461.158133172904, 
    0.288577154308617], [462.273427678907, 0.292585170340681], 
    [463.381108986159, 0.296593186372745], [464.481330905464, 
    0.30060120240481], [465.574242137232, 0.304609218436874], 
    [466.659986506073, 0.308617234468938], [467.738703181735, 
    0.312625250501002], [468.810526887324, 0.316633266533066], 
    [469.875588095705, 0.32064128256513], [470.934013214888, 
    0.324649298597194], [471.985924763142, 0.328657314629259], 
    [473.031441534535, 0.332665330661323], [474.070678755512, 
    0.336673346693387], [475.103748233128, 0.340681362725451], 
    [476.130758495432, 0.344689378757515], [477.15181492455, 
    0.348697394789579], [478.167019882884, 0.352705410821643], 
    [479.176472832885, 0.356713426853707], [480.180270450789, 
    0.360721442885772], [481.178506734671, 0.364729458917836], 
    [482.171273107181, 0.3687374749499], [483.158658513259, 0.372745490981964], 
    [484.140749513144, 0.376753507014028], [485.11763037093, 
    0.380761523046092], [486.089383138948, 0.384769539078156], 
    [487.056087738196, 0.38877755511022], [488.017822035055, 
    0.392785571142285], [488.974661914478, 0.396793587174349], 
    [489.926681349876, 0.400801603206413], [490.873952469851, 
    0.404809619238477], [491.816545621979, 0.408817635270541], 
    [492.754529433771, 0.412825651302605], [493.687970870987, 
    0.416833667334669], [494.616935293427, 0.420841683366733], 
    [495.541486508341, 0.424849699398798], [496.461686821572, 
    0.428857715430862], [497.377597086557, 0.432865731462926], 
    [498.289276751289, 0.43687374749499], [499.196783903342, 
    0.440881763527054], [500.100175313068, 0.444889779559118], 
    [500.999506475032, 0.448897795591182], [501.894831647797, 
    0.452905811623246], [502.786203892124, 0.456913827655311], 
    [503.673675107668, 0.460921843687375], [504.55729606824, 
    0.464929859719439], [505.437116455706, 0.468937875751503], 
    [506.313184892583, 0.472945891783567], [507.185548973394, 
    0.476953907815631], [508.054255294845, 0.480961923847695], 
    [508.919349484863, 0.48496993987976], [509.780876230566, 
    0.488977955911824], [510.638879305198, 0.492985971943888], 
    [511.493401594082, 0.496993987975952], [512.344485119632, 
    0.501002004008016], [513.192171065467, 0.50501002004008], 
    [514.036499799667, 0.509018036072144], [514.877510897206, 
    0.513026052104208], [515.715243161591, 0.517034068136273], 
    [516.549734645763, 0.521042084168337], [517.381022672256, 
    0.525050100200401], [518.209143852685, 0.529058116232465], 
    [519.034134106553, 0.533066132264529], [519.856028679437, 
    0.537074148296593], [520.674862160553, 0.541082164328657], 
    [521.490668499747, 0.545090180360721], [522.303481023916, 
    0.549098196392786], [523.113332452896, 0.55310621242485], [523.92025491483, 
    0.557114228456914], [524.72427996104, 0.561122244488978], 
    [525.525438580427, 0.565130260521042], [526.323761213399, 
    0.569138276553106], [527.119277765374, 0.57314629258517], 
    [527.912017619851, 0.577154308617234], [528.702009651067, 
    0.581162324649299], [529.489282236279, 0.585170340681363], 
    [530.27386326765, 0.589178356713427], [531.055780163783, 
    0.593186372745491], [531.835059880899, 0.597194388777555], 
    [532.611728923685, 0.601202404809619], [533.385813355807, 
    0.605210420841683], [534.15733881012, 0.609218436873747], 
    [534.926330498569, 0.613226452905812], [535.692813221805, 
    0.617234468937876], [536.456811378515, 0.62124248496994], 
    [537.218348974485, 0.625250501002004], [537.977449631401, 
    0.629258517034068], [538.734136595402, 0.633266533066132], 
    [539.488432745379, 0.637274549098196], [540.240360601052, 
    0.641282565130261], [540.989942330814, 0.645290581162325], 
    [541.737199759356, 0.649298597194389], [542.482154375081, 
    0.653306613226453], [543.224827337315, 0.657314629258517], 
    [543.965239483317, 0.661322645290581], [544.703411335106, 
    0.665330661322645], [545.439363106091, 0.669338677354709], 
    [546.173114707536, 0.673346693386773], [546.904685754838, 
    0.677354709418838], [547.634095573653, 0.681362725450902], 
    [548.361363205848, 0.685370741482966], [549.086507415301, 
    0.68937875751503], [549.809546693553, 0.693386773547094], 
    [550.530499265308, 0.697394789579158], [551.24938309379, 
    0.701402805611222], [551.966215885971, 0.705410821643287], 
    [552.681015097655, 0.709418837675351], [553.393797938441, 
    0.713426853707415], [554.104581376553, 0.717434869739479], 
    [554.813382143558, 0.721442885771543], [555.520216738959, 
    0.725450901803607], [556.225101434677, 0.729458917835671], 
    [556.92805227942, 0.733466933867735], [557.629085102948, 0.7374749498998], 
    [558.328215520233, 0.741482965931864], [559.025458935514, 
    0.745490981963928], [559.72083054626, 0.749498997995992], 
    [560.414345347035, 0.753507014028056], [561.106018133269, 
    0.75751503006012], [561.795863504939, 0.761523046092184], [562.48389587017, 
    0.765531062124248], [563.170129448743, 0.769539078156313], 
    [563.854578275523, 0.773547094188377], [564.537256203809, 
    0.777555110220441], [565.218176908608, 0.781563126252505], 
    [565.897353889826, 0.785571142284569], [566.574800475396, 
    0.789579158316633], [567.250529824326, 0.793587174348697], 
    [567.924554929683, 0.797595190380761], [568.596888621507, 
    0.801603206412826], [569.267543569662, 0.80561122244489], 
    [569.936532286621, 0.809619238476954], [570.603867130186, 
    0.813627254509018], [571.26956030616, 0.817635270541082], 
    [571.933623870942, 0.821643286573146], [572.596069734083, 
    0.82565130260521], [573.256909660771, 0.829659318637274], 
    [573.916155274275, 0.833667334669339], [574.573818058325, 
    0.837675350701403], [575.229909359452, 0.841683366733467], 
    [575.884440389265, 0.845691382765531], [576.537422226692, 
    0.849699398797595], [577.188865820165, 0.853707414829659], 
    [577.838781989763, 0.857715430861723], [578.487181429309, 
    0.861723446893788], [579.134074708422, 0.865731462925852], 
    [579.779472274526, 0.869739478957916], [580.423384454824, 
    0.87374749498998], [581.06582145822, 0.877755511022044], [581.706793377209, 
    0.881763527054108], [582.346310189731, 0.885771543086172], 
    [582.984381760975, 0.889779559118236], [583.621017845164, 
    0.893787575150301], [584.256228087289, 0.897795591182365], 
    [584.890022024813, 0.901803607214429], [585.522409089347, 
    0.905811623246493], [586.153398608282, 0.909819639278557], 
    [586.782999806397, 0.913827655310621], [587.411221807433, 
    0.917835671342685], [588.038073635635, 0.921843687374749], 
    [588.663564217262, 0.925851703406814], [589.287702382073, 
    0.929859719438878], [589.910496864782, 0.933867735470942], 
    [590.53195630648, 0.937875751503006], [591.152089256039, 0.94188376753507], 
    [591.770904171478, 0.945891783567134], [592.388409421317, 
    0.949899799599198], [593.004613285889, 0.953907815631262], 
    [593.619523958642, 0.957915831663327], [594.233149547404, 
    0.961923847695391], [594.845498075638, 0.965931863727455], 
    [595.456577483658, 0.969939879759519], [596.066395629836, 
    0.973947895791583], [596.674960291778, 0.977955911823647], 
    [597.282279167484, 0.981963927855711], [597.888359876481, 
    0.985971943887775], [598.49320996094, 0.98997995991984], [599.09683688677, 
    0.993987975951904], [599.699248044697, 0.997995991983968], 
    [600.300450751315, 1.00200400801603], [600.900452250123, 1.0060120240481], 
    [601.499259712548, 1.01002004008016], [602.09688023894, 1.01402805611222], 
    [602.693320859556, 1.01803607214429], [603.288588535526, 1.02204408817635], 
    [603.882690159801, 1.02605210420842], [604.475632558081, 1.03006012024048], 
    [605.067422489733, 1.03406813627255], [605.65806664869, 1.03807615230461], 
    [606.247571664333, 1.04208416833667], [606.83594410236, 1.04609218436874], 
    [607.423190465638, 1.0501002004008], [608.009317195045, 1.05410821643287], 
    [608.594330670289, 1.05811623246493], [609.178237210722, 1.06212424849699], 
    [609.761043076135, 1.06613226452906], [610.342754467542, 1.07014028056112], 
    [610.923377527948, 1.07414829659319], [611.502918343107, 1.07815631262525], 
    [612.081382942268, 1.08216432865731], [612.658777298901, 1.08617234468938], 
    [613.235107331426, 1.09018036072144], [613.81037890391, 1.09418837675351], 
    [614.384597826772, 1.09819639278557], [614.957769857464, 1.10220440881764], 
    [615.529900701143, 1.1062124248497], [616.100996011336, 1.11022044088176], 
    [616.671061390593, 1.11422845691383], [617.240102391123, 1.11823647294589], 
    [617.808124515431, 1.12224448897796], [618.375133216936, 1.12625250501002], 
    [618.94113390058, 1.13026052104208], [619.506131923432, 1.13426853707415], 
    [620.070132595278, 1.13827655310621], [620.633141179206, 1.14228456913828], 
    [621.195162892175, 1.14629258517034], [621.756202905579, 1.1503006012024], 
    [622.316266345809, 1.15430861723447], [622.875358294788, 1.15831663326653], 
    [623.433483790522, 1.1623246492986], [623.990647827618, 1.16633266533066], 
    [624.546855357813, 1.17034068136273], [625.102111290485, 1.17434869739479], 
    [625.656420493159, 1.17835671342685], [626.209787792001, 1.18236472945892], 
    [626.762217972318, 1.18637274549098], [627.313715779028, 1.19038076152305], 
    [627.864285917146, 1.19438877755511], [628.413933052247, 1.19839679358717], 
    [628.962661810929, 1.20240480961924], [629.510476781266, 1.2064128256513], 
    [630.057382513258, 1.21042084168337], [630.603383519269, 1.21442885771543], 
    [631.148484274464, 1.21843687374749], [631.692689217234, 1.22244488977956], 
    [632.236002749621, 1.22645290581162], [632.778429237731, 1.23046092184369], 
    [633.319973012146, 1.23446893787575], [633.860638368322, 1.23847695390782], 
    [634.400429566993, 1.24248496993988], [634.939350834558, 1.24649298597194], 
    [635.47740636347, 1.25050100200401], [636.014600312615, 1.25450901803607], 
    [636.550936807688, 1.25851703406814], [637.08641994156, 1.2625250501002], 
    [637.621053774648, 1.26653306613226], [638.154842335267, 1.27054108216433], 
    [638.687789619991, 1.27454909819639], [639.219899593997, 1.27855711422846], 
    [639.751176191411, 1.28256513026052], [640.281623315648, 1.28657314629259], 
    [640.811244839748, 1.29058116232465], [641.3400446067, 1.29458917835671], 
    [641.868026429776, 1.29859719438878], [642.395194092843, 1.30260521042084], 
    [642.921551350687, 1.30661322645291], [643.447101929318, 1.31062124248497], 
    [643.971849526285, 1.31462925851703], [644.495797810973, 1.3186372745491], 
    [645.018950424907, 1.32264529058116], [645.541310982045, 1.32665330661323], 
    [646.062883069069, 1.33066132264529], [646.583670245674, 1.33466933867735], 
    [647.103676044849, 1.33867735470942], [647.622903973161, 1.34268537074148], 
    [648.141357511025, 1.34669338677355], [648.659040112981, 1.35070140280561], 
    [649.175955207959, 1.35470941883768], [649.692106199549, 1.35871743486974], 
    [650.207496466255, 1.3627254509018], [650.722129361761, 1.36673346693387], 
    [651.23600821518, 1.37074148296593], [651.749136331306, 1.374749498998], 
    [652.261516990865, 1.37875751503006], [652.773153450757, 1.38276553106212], 
    [653.284048944298, 1.38677354709419], [653.794206681459, 1.39078156312625], 
    [654.303629849101, 1.39478957915832], [654.812321611206, 1.39879759519038], 
    [655.320285109111, 1.40280561122244], [655.827523461727, 1.40681362725451], 
    [656.334039765768, 1.41082164328657], [656.839837095969, 1.41482965931864], 
    [657.344918505305, 1.4188376753507], [657.849287025207, 1.42284569138277], 
    [658.35294566577, 1.42685370741483], [658.855897415969, 1.43086172344689], 
    [659.358145243859, 1.43486973947896], [659.859692096784, 1.43887775551102], 
    [660.360540901578, 1.44288577154309], [660.860694564763, 1.44689378757515], 
    [661.360155972749, 1.45090180360721], [661.858927992022, 1.45490981963928], 
    [662.357013469342, 1.45891783567134], [662.854415231931, 1.46292585170341], 
    [663.351136087659, 1.46693386773547], [663.847178825229, 1.47094188376754], 
    [664.342546214361, 1.4749498997996], [664.837241005972, 1.47895791583166], 
    [665.331265932353, 1.48296593186373], [665.824623707346, 1.48697394789579], 
    [666.317317026519, 1.49098196392786], [666.809348567335, 1.49498997995992], 
    [667.300720989326, 1.49899799599198], [667.791436934255, 1.50300601202405], 
    [668.281499026288, 1.50701402805611], [668.770909872153, 1.51102204408818], 
    [669.259672061304, 1.51503006012024], [669.747788166079, 1.5190380761523], 
    [670.23526074186, 1.52304609218437], [670.72209232723, 1.52705410821643], 
    [671.208285444122, 1.5310621242485], [671.693842597978, 1.53507014028056], 
    [672.178766277895, 1.53907815631263], [672.663058956777, 1.54308617234469], 
    [673.146723091478, 1.54709418837675], [673.629761122951, 1.55110220440882], 
    [674.112175476393, 1.55511022044088], [674.593968561381, 1.55911823647295], 
    [675.075142772019, 1.56312625250501], [675.555700487074, 1.56713426853707], 
    [676.03564407011, 1.57114228456914], [676.51497586963, 1.5751503006012], 
    [676.993698219206, 1.57915831663327], [677.471813437613, 1.58316633266533], 
    [677.949323828957, 1.58717434869739], [678.426231682809, 1.59118236472946], 
    [678.902539274332, 1.59519038076152], [679.378248864406, 1.59919839679359], 
    [679.853362699751, 1.60320641282565], [680.327883013058, 1.60721442885772], 
    [680.801812023105, 1.61122244488978], [681.27515193488, 1.61523046092184], 
    [681.747904939702, 1.61923847695391], [682.220073215337, 1.62324649298597], 
    [682.691658926117, 1.62725450901804], [683.162664223054, 1.6312625250501], 
    [683.633091243958, 1.63527054108216], [684.102942113544, 1.63927855711423], 
    [684.572218943551, 1.64328657314629], [685.040923832847, 1.64729458917836], 
    [685.509058867542, 1.65130260521042], [685.976626121095, 1.65531062124248], 
    [686.443627654422, 1.65931863727455], [686.910065516, 1.66332665330661], 
    [687.375941741974, 1.66733466933868], [687.841258356259, 1.67134268537074], 
    [688.306017370646, 1.67535070140281], [688.770220784898, 1.67935871743487], 
    [689.233870586854, 1.68336673346693], [689.696968752529, 1.687374749499], 
    [690.15951724621, 1.69138276553106], [690.621518020553, 1.69539078156313], 
    [691.082973016682, 1.69939879759519], [691.543884164282, 1.70340681362725], 
    [692.004253381693, 1.70741482965932], [692.464082576004, 1.71142284569138], 
    [692.923373643145, 1.71543086172345], [693.382128467977, 1.71943887775551], 
    [693.840348924386, 1.72344689378758], [694.298036875366, 1.72745490981964], 
    [694.755194173114, 1.7314629258517], [695.211822659114, 1.73547094188377], 
    [695.667924164222, 1.73947895791583], [696.123500508756, 1.7434869739479], 
    [696.578553502577, 1.74749498997996], [697.033084945175, 1.75150300601202], 
    [697.487096625749, 1.75551102204409], [697.940590323296, 1.75951903807615], 
    [698.393567806685, 1.76352705410822], [698.846030834739, 1.76753507014028], 
    [699.297981156318, 1.77154308617234], [699.749420510395, 1.77555110220441], 
    [700.200350626136, 1.77955911823647], [700.650773222976, 1.78356713426854], 
    [701.100690010693, 1.7875751503006], [701.55010268949, 1.79158316633267], 
    [701.999012950064, 1.79559118236473], [702.447422473683, 1.79959919839679], 
    [702.895332932261, 1.80360721442886], [703.342745988425, 1.80761523046092], 
    [703.789663295594, 1.81162324649299], [704.236086498044, 1.81563126252505], 
    [704.682017230986, 1.81963927855711], [705.127457120628, 1.82364729458918], 
    [705.572407784247, 1.82765531062124], [706.016870830262, 1.83166332665331], 
    [706.460847858294, 1.83567134268537], [706.90434045924, 1.83967935871743], 
    [707.347350215335, 1.8436873747495], [707.789878700221, 1.84769539078156], 
    [708.231927479008, 1.85170340681363], [708.673498108346, 1.85571142284569], 
    [709.11459213648, 1.85971943887776], [709.555211103318, 1.86372745490982], 
    [709.995356540497, 1.86773547094188], [710.435029971438, 1.87174348697395], 
    [710.874232911412, 1.87575150300601], [711.312966867599, 1.87975951903808], 
    [711.751233339152, 1.88376753507014], [712.18903381725, 1.8877755511022], 
    [712.626369785165, 1.89178356713427], [713.063242718315, 1.89579158316633], 
    [713.499654084324, 1.8997995991984], [713.935605343079, 1.90380761523046], 
    [714.371097946789, 1.90781563126253], [714.806133340038, 1.91182364729459], 
    [715.240712959843, 1.91583166332665], [715.674838235711, 1.91983967935872], 
    [716.10851058969, 1.92384769539078], [716.541731436427, 1.92785571142285], 
    [716.974502183217, 1.93186372745491], [717.406824230064, 1.93587174348697], 
    [717.838698969726, 1.93987975951904], [718.270127787772, 1.9438877755511], 
    [718.701112062632, 1.94789579158317], [719.13165316565, 1.95190380761523], 
    [719.561752461132, 1.95591182364729], [719.991411306401, 1.95991983967936], 
    [720.420631051841, 1.96392785571142], [720.849413040952, 1.96793587174349], 
    [721.277758610397, 1.97194388777555], [721.705669090048, 1.97595190380762], 
    [722.133145803041, 1.97995991983968], [722.560190065814, 1.98396793587174], 
    [722.986803188164, 1.98797595190381], [723.412986473288, 1.99198396793587], 
    [723.838741217829, 1.99599198396794], [724.264068711929, 2.0]], 'd'))
mdb.models['3000_ID26175_Y300_K300_n0-5'].Material(name='Tungsten Carbide')
mdb.models['3000_ID26175_Y300_K300_n0-5'].materials['Tungsten Carbide'].Elastic(
    table=((650000.0, 0.21), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].Material(name='Stainless Steel')
mdb.models['3000_ID26175_Y300_K300_n0-5'].materials['Stainless Steel'].Elastic(
    table=((195000.0, 0.27), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].HomogeneousSolidSection(material=
    'Specimen', name='Specimen', thickness=None)
mdb.models['3000_ID26175_Y300_K300_n0-5'].HomogeneousSolidSection(material=
    'Tungsten Carbide', name='Tungsten Carbide', thickness=None)
mdb.models['3000_ID26175_Y300_K300_n0-5'].HomogeneousSolidSection(material=
    'Stainless Steel', name='Stainless Steel', thickness=None)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].Set(faces=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].faces.getSequenceFromMask(
    ('[#3 ]', ), ), name='Specimen')
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].SectionAssignment(
    offset=0.0, offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].sets['Specimen']
    , sectionName='Specimen', thicknessAssignment=FROM_SECTION)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].Set(faces=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Stainless Steel')
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].SectionAssignment(
    offset=0.0, offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].sets['Stainless Steel']
    , sectionName='Stainless Steel', thicknessAssignment=FROM_SECTION)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].Set(faces=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].faces.getSequenceFromMask(
    ('[#7 ]', ), ), name='Set-1')
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].SectionAssignment(
    offset=0.0, offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].sets['Set-1']
    , sectionName='Tungsten Carbide', thicknessAssignment=FROM_SECTION)
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.DatumCsysByThreePoints(
    coordSysType=CYLINDRICAL, origin=(0.0, 0.0, 0.0), point1=(1.0, 0.0, 0.0), 
    point2=(0.0, 0.0, -1.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Instance(dependent=ON, 
    name='Elastic Indenter-1', part=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'])
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Instance(dependent=ON, 
    name='Load Application Part-1', part=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Load Application Part'])
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Instance(dependent=ON, 
    name='Specimen-1', part=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'])
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Instance(dependent=ON, 
    name='Steel-1', part=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'])
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.translate(instanceList=(
    'Load Application Part-1', 'Steel-1'), vector=(0.0, 1.0, 0.0))
mdb.models['3000_ID26175_Y300_K300_n0-5'].StaticStep(initialInc=1e-05, 
    matrixSolver=DIRECT, matrixStorage=UNSYMMETRIC, maxNumInc=10000, minInc=
    1e-08, name='Loading Step', nlgeom=ON, previous='Initial')
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Load Application Part'].Set(
    name='Reference Point Set', referencePoints=(
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Load Application Part'].referencePoints[2], 
    ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.regenerate()
mdb.models['3000_ID26175_Y300_K300_n0-5'].HistoryOutputRequest(createStepName=
    'Loading Step', name='Indenter Displacement', rebar=EXCLUDE, region=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.allInstances['Load Application Part-1'].sets['Reference Point Set']
    , sectionPoints=DEFAULT, timeInterval=0.02, variables=('U2', ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].fieldOutputRequests['F-Output-1'].setValues(
    timeInterval=0.25, variables=('S', 'MISES', 'PE', 'PEEQ', 'PEMAG', 'LE', 
    'U', 'EVOL'))
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Surface(name=
    'Load-Application Part', side2Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.instances['Load Application Part-1'].edges.getSequenceFromMask(
    ('[#3 ]', ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Surface(name='Steel Top'
    , side1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.instances['Steel-1'].edges.getSequenceFromMask(
    ('[#10 ]', ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].Tie(adjust=ON, master=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.surfaces['Load-Application Part']
    , name='Constraint-1', positionToleranceMethod=COMPUTED, slave=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.surfaces['Steel Top']
    , thickness=ON, tieRotations=ON)
mdb.models['3000_ID26175_Y300_K300_n0-5'].ContactProperty('Steel-Indenter')
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Surface(name='m_Surf-3', 
    side1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.instances['Steel-1'].edges.getSequenceFromMask(
    ('[#6 ]', ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Surface(name='s_Surf-3', 
    side1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.instances['Elastic Indenter-1'].edges.getSequenceFromMask(
    ('[#48 ]', ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].SurfaceToSurfaceContactStd(
    adjustMethod=NONE, clearanceRegion=None, createStepName='Loading Step', 
    datumAxis=None, initialClearance=OMIT, interactionProperty='Steel-Indenter'
    , master=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.surfaces['m_Surf-3']
    , name='Steel-Indenter', slave=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.surfaces['s_Surf-3']
    , sliding=FINITE, thickness=ON)
mdb.models['3000_ID26175_Y300_K300_n0-5'].interactions['Steel-Indenter'].move(
    'Loading Step', 'Initial')
mdb.models['3000_ID26175_Y300_K300_n0-5'].ContactProperty(
    'Indenter-Specimen Friction')
mdb.models['3000_ID26175_Y300_K300_n0-5'].interactionProperties['Indenter-Specimen Friction'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Surface(name='m_Surf-5', 
    side1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.instances['Elastic Indenter-1'].edges.getSequenceFromMask(
    ('[#c ]', ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Surface(name='s_Surf-5', 
    side1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.instances['Specimen-1'].edges.getSequenceFromMask(
    ('[#60 ]', ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].SurfaceToSurfaceContactStd(
    adjustMethod=NONE, clearanceRegion=None, createStepName='Loading Step', 
    datumAxis=None, initialClearance=OMIT, interactionProperty=
    'Indenter-Specimen Friction', master=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.surfaces['m_Surf-5']
    , name='Indenter-Specimen', slave=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.surfaces['s_Surf-5']
    , sliding=FINITE, thickness=ON)
mdb.models['3000_ID26175_Y300_K300_n0-5'].interactions['Indenter-Specimen'].move(
    'Loading Step', 'Initial')
mdb.models['3000_ID26175_Y300_K300_n0-5'].TabularAmplitude(data=((0.0, 0.0), (
    1.0, -3000)), name='Load History', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Set(name='Set-1', 
    referencePoints=(
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.instances['Load Application Part-1'].referencePoints[2], 
    ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].ConcentratedForce(amplitude=
    'Load History', cf2=1.0, createStepName='Loading Step', distributionType=
    UNIFORM, field='', localCsys=None, name='Load History', region=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.sets['Set-1'])
mdb.models['3000_ID26175_Y300_K300_n0-5'].loads['Load History'].suppress()
mdb.models['3000_ID26175_Y300_K300_n0-5'].loads['Load History'].resume()
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Set(edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.instances['Specimen-1'].edges.getSequenceFromMask(
    ('[#8 ]', ), ), name='Set-2')
mdb.models['3000_ID26175_Y300_K300_n0-5'].EncastreBC(createStepName=
    'Loading Step', localCsys=None, name='Fixed Bottom', region=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.sets['Set-2'])
mdb.models['3000_ID26175_Y300_K300_n0-5'].boundaryConditions['Fixed Bottom'].move(
    'Loading Step', 'Initial')
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Set(edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.instances['Elastic Indenter-1'].edges.getSequenceFromMask(
    ('[#a2 ]', ), ), name='Set-3')
mdb.models['3000_ID26175_Y300_K300_n0-5'].DisplacementBC(amplitude=UNSET, 
    createStepName='Loading Step', distributionType=UNIFORM, fieldName='', 
    fixed=OFF, localCsys=None, name='Fixed Indenter Displacement', region=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.sets['Set-3'], u1=
    0.0, u2=UNSET, ur3=UNSET)
mdb.models['3000_ID26175_Y300_K300_n0-5'].boundaryConditions['Fixed Indenter Displacement'].move(
    'Loading Step', 'Initial')
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.Set(edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.instances['Specimen-1'].edges.getSequenceFromMask(
    ('[#84 ]', ), ), name='Set-4')
mdb.models['3000_ID26175_Y300_K300_n0-5'].XsymmBC(createStepName='Initial', 
    localCsys=None, name='Symmetry Condition', region=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.sets['Set-4'])
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].setMeshControls(
    elemShape=TRI, regions=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].faces.getSequenceFromMask(
    ('[#7 ]', ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].setElementType(
    elemTypes=(ElemType(elemCode=CAX4R, elemLibrary=STANDARD), ElemType(
    elemCode=CAX3H, elemLibrary=STANDARD)), regions=(
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].faces.getSequenceFromMask(
    ('[#7 ]', ), ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].edges.getSequenceFromMask(
    ('[#2 ]', ), ), number=30, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end2Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].edges.getSequenceFromMask(
    ('[#5 ]', ), ), number=40, ratio=10.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].edges.getSequenceFromMask(
    ('[#1 ]', ), ), number=40, ratio=10.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end2Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].edges.getSequenceFromMask(
    ('[#18 ]', ), ), number=20, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end2Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].edges.getSequenceFromMask(
    ('[#18 ]', ), ), number=30, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end2Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].edges.getSequenceFromMask(
    ('[#18 ]', ), ), number=30, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].generateMesh()
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].deleteMesh(regions=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].setMeshControls(
    elemShape=TRI, regions=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].generateMesh()
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].setElementType(
    elemTypes=(ElemType(elemCode=CAX4R, elemLibrary=STANDARD), ElemType(
    elemCode=CAX3H, elemLibrary=STANDARD)), regions=(
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Steel'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].edges.getSequenceFromMask(
    ('[#82 ]', ), ), number=20, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].edges.getSequenceFromMask(
    ('[#44 ]', ), ), number=30, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].edges.getSequenceFromMask(
    ('[#8 ]', ), ), end2Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].edges.getSequenceFromMask(
    ('[#20 ]', ), ), number=20, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].edges.getSequenceFromMask(
    ('[#8 ]', ), ), end2Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].edges.getSequenceFromMask(
    ('[#20 ]', ), ), number=20, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end2Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].edges.getSequenceFromMask(
    ('[#11 ]', ), ), number=25, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end2Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].edges.getSequenceFromMask(
    ('[#11 ]', ), ), number=25, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].setElementType(
    elemTypes=(ElemType(elemCode=CAX4R, elemLibrary=STANDARD), ElemType(
    elemCode=CAX3H, elemLibrary=STANDARD)), regions=(
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].faces.getSequenceFromMask(
    ('[#7 ]', ), ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Elastic Indenter'].generateMesh(
    )
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].edges.getSequenceFromMask(
    ('[#42 ]', ), ), number=150, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].edges.getSequenceFromMask(
    ('[#81 ]', ), ), number=75, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].setMeshControls(
    elemShape=TRI, regions=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].edges.getSequenceFromMask(
    ('[#4 ]', ), ), end2Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].edges.getSequenceFromMask(
    ('[#20 ]', ), ), number=50, ratio=6.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].seedEdgeByBias(
    biasMethod=SINGLE, constraint=FINER, end1Edges=
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].edges.getSequenceFromMask(
    ('[#18 ]', ), ), number=30, ratio=1.0)
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].setElementType(
    elemTypes=(ElemType(elemCode=CAX4RH, elemLibrary=STANDARD, 
    hourglassControl=DEFAULT), ElemType(elemCode=CAX3, elemLibrary=STANDARD)), 
    regions=(
    mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].faces.getSequenceFromMask(
    ('[#2 ]', ), ), ))
mdb.models['3000_ID26175_Y300_K300_n0-5'].parts['Specimen'].generateMesh()
mdb.models['3000_ID26175_Y300_K300_n0-5'].rootAssembly.regenerate()
mdb.Job(atTime=None, contactPrint=OFF, description='', echoPrint=OFF, 
    explicitPrecision=SINGLE, getMemoryFromAnalysis=True, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='3000_ID26175_Y300_K300_n0-5', 
    modelPrint=OFF, multiprocessingMode=DEFAULT, name=
    '3000_ID26175_Y300_K300_n0-5', nodalOutputPrecision=SINGLE, numCpus=2, 
    numDomains=2, numGPUs=0, queue=None, resultsFormat=ODB, scratch='', type=
    ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['3000_ID26175_Y300_K300_n0-5'].submit(consistencyChecking=OFF)
